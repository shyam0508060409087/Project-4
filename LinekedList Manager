class LinkedListManager {
    Node head;
    private int size;

    class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
            size++;
        }
    }

    public void addFirst(int data) {
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;
    }

    public void addLast(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
            return;
        }
        Node temp = head;
        while (temp.next != null) {
            temp = temp.next;
        }
        temp.next = newNode;
    }

    public void deleteFirst() {
        if (head != null) {
            head = head.next;
            size--;
        }
    }

    public void deleteLast() {
        if (head == null || head.next == null) {
            head = null;
            size--;
            return;
        }
        Node secondLast = head;
        Node last = head.next;
        while (last.next != null) {
            secondLast = secondLast.next;
            last = last.next;
        }
        secondLast.next = null;
        size--;
    }

    public void reverseList() {
        if (head == null || head.next == null) return;
        Node prev = null;
        Node curr = head;
        while (curr != null) {
            Node nextNode = curr.next;
            curr.next = prev;
            prev = curr;
            curr = nextNode;
        }
        head = prev;
    }

    public void printList() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " -> ");
            temp = temp.next;
        }
        System.out.println("NULL");
    }

    public static void main(String[] args) {
        LinkedListManager list = new LinkedListManager();
        list.addFirst(3);
        list.addLast(5);
        list.addFirst(2);
        list.printList();
        list.reverseList();
        list.printList();
    }
}
